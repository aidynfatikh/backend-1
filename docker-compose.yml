version: "3.8"
services:
  back:
    build:
      context: ./back
      dockerfile: Dockerfile
    image: aidynfatikh/todo-back:latest
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
      - SECRET_KEY=your_super_secret_key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=AIzaSyDzX-gm-NnheM5giLNNwSBHQbuDLwuJ1_s
    depends_on:
      - db
      - redis

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    image: aidynfatikh/todo-front:latest
    ports:
      - "3000:80"
    depends_on:
      - back

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  celery:
    build:
      context: ./back
      dockerfile: Dockerfile
    command: sh -c "env && celery -A app.celery_worker worker --loglevel=info"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
      - SECRET_KEY=your_super_secret_key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - back

volumes:
  postgres_data:
